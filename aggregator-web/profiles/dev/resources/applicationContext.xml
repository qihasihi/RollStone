<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
 	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
       http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    ">

    <!-- 配置数据源
 <bean id="dataSource" name="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName">
            <value>java:comp/env/jdbc/mschool</value>
        </property>
    </bean>
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://192.168.10.41:3306/m_school"/>
        <property name="username" value="mytest"/>
        <property name="password" value="testdb"/>
    </bean>
    -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://192.168.10.41:3306/school201501"/>
        <property name="user" value="mytest"/>
        <property name="password" value="testdb"/>
        <property name="minPoolSize" value="10" />
        <property name="maxPoolSize" value="50" />
        <property name="maxIdleTime" value="600" />
        <property name="acquireIncrement" value="5" />
        <property name="acquireRetryAttempts" value="60" />
        <property name="maxStatements" value="0" />
        <property name="initialPoolSize" value="5" />
        <property name="idleConnectionTestPeriod" value="120" />
        <property name="testConnectionOnCheckin" value="false" />
        <property name="autoCommitOnClose" value="false" />
    </bean>

    <!-- 配置Jdbc模板 -->
    <bean id="jdbcTemplate" name="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg><ref bean="dataSource"/></constructor-arg>
    </bean>
    <!-- 配置事务管理器 -->
    <bean id="transactionManager" name="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 事务控制   -->
    <tx:annotation-driven transaction-manager="transactionManager"  />

    <!-- 导入引用包 -->
    <import resource="classpath:spring/spring-config-*.xml" />
    <!-- 启动包扫描功能，以便注册带有@Controller、@Service、@repository、@Component等注解的类成为spring的bean -->
    <context:component-scan base-package="com.school" />
    <!-- <context:component-scan base-package="com.springmvc.hibernate.demo.service" />
     <context:component-scan base-package="com.springmvc.hibernate.demo.dao" />     -->
    <context:annotation-config/>
    <!-- 对静态资源文件的访问 (公 共)-->

    <mvc:resources mapping="/images/**" location="/images/" />
    <mvc:resources mapping="/img/**" location="/img/" />
    <mvc:resources mapping="/css/images/**" location="/css/images/**" />
    <mvc:resources mapping="/css/images/**" location="/css/images/**" />

    <mvc:resources mapping="/css/**" location="/css/" />
    <mvc:resources mapping="/js/common/**" location="/js/common/" />
    <!-- 定义ajaxUpload文件的上传 js  css定义 -->
    <mvc:resources mapping="/util/progressupload-1/css/**" location="/util/progressupload-1/css/" />
    <mvc:resources mapping="/util/progressupload-1/**" location="/util/progressupload-1/" />
    <!-- xheditor  css   js option -->
    <mvc:resources mapping="/util/xheditor/xheditor_emot/default/**" location="/util/xheditor/xheditor_emot/default/" />
    <mvc:resources mapping="/util/xheditor/xheditor_emot/ipb/**" location="/util/xheditor/xheditor_emot/ipb/" />
    <mvc:resources mapping="/util/xheditor/xheditor_emot/msn/**" location="/util/xheditor/xheditor_emot/msn/" />
    <mvc:resources mapping="/util/xheditor/xheditor_emot/pidgin/**" location="/util/xheditor/xheditor_emot/pidgin/" />
    <mvc:resources mapping="/util/xheditor/jquery/**" location="/util/xheditor/jquery/"/>
    <!--ckeditor-->
    <mvc:resources mapping="/ueditor/**" location="/ueditor/" />
    <mvc:resources mapping="/ckfinder/ckfinder/**" location="/ckfinder/ckfinder/" />
    <mvc:resources mapping="/ueditor/themes/default/css/**" location="/ueditor/themes/default/css/" />



    <mvc:resources mapping="/userUploadFile/**" location="/userUploadFile/" />
    <mvc:resources mapping="/uploadfile/**" location="/uploadfile/" />
    <mvc:resources mapping="/js/**" location="/js/" />




    <!--Quzrtz -->
   <!-- <bean id="quartzJob" class="com.school.share.TestQ"></bean>
    <bean id="jobTask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="quartzJob"/>
        &lt;!&ndash; 调用类中的方法 &ndash;&gt;
        <property name="targetMethod">
            <value>work</value>
        </property>
    </bean>


    &lt;!&ndash; 定义触发时间 &ndash;&gt;
    <bean id="doTime" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail">
            <ref bean="jobTask"/>
        </property>
        &lt;!&ndash; cron表达式 &ndash;&gt;
        <property name="cronExpression">
            <value>0-59 * * * * ?</value>
        </property>
    </bean>
    &lt;!&ndash; 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序  &ndash;&gt;
    <bean id="startQuertz" lazy-init="true" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="doTime"/>
            </list>
        </property>
    </bean>-->



</beans>